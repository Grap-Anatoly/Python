PyQt API is a set of modules containing a large number of classes and functions.
While QtCore module contains non-GUI functionality for working with file and directory etc.,
QtGui module contains all the graphical controls.
In addition, there are modules for working with XML (QtXml), SVG (QtSvg), and SQL (QtSql), etc.

A list of frequently used modules is given below −

QtCore − Core non-GUI classes used by other modules
QtGui − Graphical user interface components
QtMultimedia − Classes for low-level multimedia programming
QtNetwork − Classes for network programming
QtOpenGL − OpenGL support classes
QtScript − Classes for evaluating Qt Scripts
QtSql − Classes for database integration using SQL
QtSvg − Classes for displaying the contents of SVG files
QtWebKit − Classes for rendering and editing HTML
QtXml − Classes for handling XML
QtWidgets − Classes for creating classic desktop-style UIs
QtDesigner − Classes for extending Qt Designer

Supporting Environments
PyQt is compatible with all the popular operating systems including Windows, Linux, and Mac OS.
It is dual licensed, available under GPL as well as commercial license. The latest stable version is PyQt5-5.13.2.

Windows
Wheels for 32-bit or 64-bit architecture are provided that are compatible with Python version 3.5 or later.
The recommended way to install is using PIP utility −

pip3 install PyQt5

To install development tools such as Qt Designer to support PyQt5 wheels, following is the command −

pip3 install pyqt5-tools

-------------------------------------
Major Classes
-------------------------------------

QWidget class, derived from QObject and QPaintDevice classes is the base class for all user interface objects. QDialog and QFrame classes are also derived from QWidget class. They have their own sub-class system.

Here is a select list of frequently used widgets

------------------QLabel

Used to display text or image

------------------QLineEdit

Allows the user to enter one line of text

------------------QTextEdit

Allows the user to enter multi-line text

------------------QPushButton

A command button to invoke action

------------------QRadioButton

Enables to choose one from multiple options

------------------QCheckBox

Enables choice of more than one options

------------------QSpinBox

Enables to increase/decrease an integer value

------------------QScrollBar

Enables to access contents of a widget beyond display aperture

------------------QSlider

Enables to change the bound value linearly.

------------------QComboBox

Provides a dropdown list of items to select from

------------------QMenuBar

Horizontal bar holding QMenu objects

------------------QStatusBar

Usually at bottom of QMainWindow, provides status information.

------------------QToolBar

Usually at top of QMainWindow or floating. Contains action buttons

------------------QListView

Provides a selectable list of items in ListMode or IconMode

------------------QPixmap

Off-screen image representation for display on QLabel or QPushButton object

------------------QDialog

Modal or modeless window which can return information to parent window